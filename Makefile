include pgxntool/base.mk

extension_control = $(DESTDIR)$(datadir)/extension/$1.control

#cat_tools: $(DESTDIR)$(datadir)/extension/cat_tools.control
$(DESTDIR)$(datadir)/extension/cat_tools.control:
	pgxn install cat_tools

GENERATED = generated/entity.dmp generated/types.sql generated/catalog.dmp
BUILD_SCRIPTS = $(wildcard build/*.sql)

generated/types.sql: generated/entity.dmp
meta/entity.sh: common/types.sql
meta/entity.sql: common/types.sql

.PHONY: generated
generated: $(GENERATED)

.PHONY: meta
meta: generated
all: generated

# IF YOU CHANGE EITHER OF THESE, make sure to update generated/README
generated/%.sql: meta/%.sql | $(call extension_control,cat_tools)
	@echo 'Generating $@ from $<'
	ls -la $@ $<
	@echo '-- THIS IS A GENERATED FILE. DO NOT EDIT!' > $@
	@echo >> $@
	@psql -qt -P format=unaligned --no-psqlrc -v ON_ERROR_STOP=1 -f $< >> $@

generated/%.dmp: meta/%.sh meta/%* | $(call extension_control,cat_tools)
	@echo 'Generating $@ from $<'
	@echo '-- THIS IS A GENERATED FILE. DO NOT EDIT!' > $@
	@echo '-- Generated by $<' >> $@
	@echo >> $@
	@$< >> $@
	@test -r $@
	@test `cat $@ | wc -l` -gt 40

.PHONY: genclean
genclean: clean
	rm -f $(GENERATED)

EXTRA_CLEAN += sql/cat_snap.sql
sql/%.sql: build/%.sh $(GENERATED) $(BUILD_SCRIPTS)
	$< > $@
