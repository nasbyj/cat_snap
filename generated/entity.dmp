-- THIS IS A GENERATED FILE. DO NOT EDIT!
-- Generated by meta/entity.sh

CREATE TYPE attribute AS( attribute_name text, attribute_type text );
CREATE DOMAIN pg_node_tree__text AS text;

-- vi: expandtab ts=2 sw=2
CREATE TYPE entity_type AS ENUM(
	'Catalog'
	, 'Stats File'
	, 'Other Status'
);

CREATE TABLE entity(
	entity				text		NOT NULL PRIMARY KEY
	, entity_type		entity_type	NOT NULL
	, attributes		attribute[]	NOT NULL
	, extra_attributes	attribute[]
	, delta_keys		text[]		
	, delta_counters	text[]		
	, delta_fields	text[]		
);

COMMENT ON COLUMN entity.delta_keys IS 'Fields used to verify that two stat types that are being deltaed from each other refer to the same entity.';
COMMENT ON COLUMN entity.delta_fields IS 'Fields that are counters. These can not be deltaed normally; they require special logic.';
COMMENT ON COLUMN entity.delta_fields IS 'Fields to delta when performing deltaion.';
 INSERT INTO entity VALUES( 'pg_aggregate', 'Catalog', E'{"(xmin,xid)","(aggfnoid,regproc)","(aggkind,\\"\\"\\"char\\"\\"\\")","(aggnumdirectargs,smallint)","(aggtransfn,regproc)","(aggfinalfn,regproc)","(aggcombinefn,regproc)","(aggserialfn,regproc)","(aggdeserialfn,regproc)","(aggmtransfn,regproc)","(aggminvtransfn,regproc)","(aggmfinalfn,regproc)","(aggfinalextra,boolean)","(aggmfinalextra,boolean)","(aggsortop,oid)","(aggtranstype,oid)","(aggtransspace,integer)","(aggmtranstype,oid)","(aggmtransspace,integer)","(agginitval,text)","(aggminitval,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_am', 'Catalog', E'{"(xmin,xid)","(oid,oid)","(amname,text)","(amhandler,regproc)","(amtype,\\"\\"\\"char\\"\\"\\")"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_amop', 'Catalog', E'{"(xmin,xid)","(oid,oid)","(amopfamily,oid)","(amoplefttype,oid)","(amoprighttype,oid)","(amopstrategy,smallint)","(amoppurpose,\\"\\"\\"char\\"\\"\\")","(amopopr,oid)","(amopmethod,oid)","(amopsortfamily,oid)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_amproc', 'Catalog', '{"(xmin,xid)","(oid,oid)","(amprocfamily,oid)","(amproclefttype,oid)","(amprocrighttype,oid)","(amprocnum,smallint)","(amproc,regproc)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_attrdef', 'Catalog', '{"(xmin,xid)","(oid,oid)","(adrelid,oid)","(adnum,smallint)","(adbin,pg_node_tree)","(adsrc,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_attribute', 'Catalog', E'{"(xmin,xid)","(attrelid,oid)","(attname,text)","(atttypid,oid)","(attstattarget,integer)","(attlen,smallint)","(attnum,smallint)","(attndims,integer)","(attcacheoff,integer)","(atttypmod,integer)","(attbyval,boolean)","(attstorage,\\"\\"\\"char\\"\\"\\")","(attalign,\\"\\"\\"char\\"\\"\\")","(attnotnull,boolean)","(atthasdef,boolean)","(attisdropped,boolean)","(attislocal,boolean)","(attinhcount,integer)","(attcollation,oid)","(attacl,aclitem[])","(attoptions,text[])","(attfdwoptions,text[])"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_auth_members', 'Catalog', '{"(xmin,xid)","(roleid,oid)","(member,oid)","(grantor,oid)","(admin_option,boolean)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_available_extension_versions', 'Other Status', '{"(name,text)","(version,text)","(installed,boolean)","(superuser,boolean)","(relocatable,boolean)","(schema,text)","(requires,name[])","(comment,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_available_extensions', 'Other Status', '{"(name,text)","(default_version,text)","(installed_version,text)","(comment,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_cast', 'Catalog', E'{"(xmin,xid)","(oid,oid)","(castsource,oid)","(casttarget,oid)","(castfunc,oid)","(castcontext,\\"\\"\\"char\\"\\"\\")","(castmethod,\\"\\"\\"char\\"\\"\\")"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_class', 'Catalog', E'{"(xmin,xid)","(oid,oid)","(relname,text)","(relnamespace,oid)","(reltype,oid)","(reloftype,oid)","(relowner,oid)","(relam,oid)","(relfilenode,oid)","(reltablespace,oid)","(relpages,integer)","(reltuples,real)","(relallvisible,integer)","(reltoastrelid,oid)","(relhasindex,boolean)","(relisshared,boolean)","(relpersistence,\\"\\"\\"char\\"\\"\\")","(relkind,\\"\\"\\"char\\"\\"\\")","(relnatts,smallint)","(relchecks,smallint)","(relhasoids,boolean)","(relhaspkey,boolean)","(relhasrules,boolean)","(relhastriggers,boolean)","(relhassubclass,boolean)","(relrowsecurity,boolean)","(relforcerowsecurity,boolean)","(relispopulated,boolean)","(relreplident,\\"\\"\\"char\\"\\"\\")","(relfrozenxid,xid)","(relminmxid,xid)","(relacl,aclitem[])","(reloptions,text[])"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_collation', 'Catalog', '{"(xmin,xid)","(oid,oid)","(collname,text)","(collnamespace,oid)","(collowner,oid)","(collencoding,integer)","(collcollate,text)","(collctype,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_config', 'Other Status', '{"(name,text)","(setting,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_constraint', 'Catalog', E'{"(xmin,xid)","(oid,oid)","(conname,text)","(connamespace,oid)","(contype,\\"\\"\\"char\\"\\"\\")","(condeferrable,boolean)","(condeferred,boolean)","(convalidated,boolean)","(conrelid,oid)","(contypid,oid)","(conindid,oid)","(confrelid,oid)","(confupdtype,\\"\\"\\"char\\"\\"\\")","(confdeltype,\\"\\"\\"char\\"\\"\\")","(confmatchtype,\\"\\"\\"char\\"\\"\\")","(conislocal,boolean)","(coninhcount,integer)","(connoinherit,boolean)","(conkey,smallint[])","(confkey,smallint[])","(conpfeqop,oid[])","(conppeqop,oid[])","(conffeqop,oid[])","(conexclop,oid[])","(conbin,pg_node_tree)","(consrc,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_conversion', 'Catalog', '{"(xmin,xid)","(oid,oid)","(conname,text)","(connamespace,oid)","(conowner,oid)","(conforencoding,integer)","(contoencoding,integer)","(conproc,regproc)","(condefault,boolean)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_cursors', 'Other Status', E'{"(name,text)","(statement,text)","(is_holdable,boolean)","(is_binary,boolean)","(is_scrollable,boolean)","(creation_time,\\"timestamp with time zone\\")"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_database', 'Catalog', '{"(xmin,xid)","(oid,oid)","(datname,text)","(datdba,oid)","(encoding,integer)","(datcollate,text)","(datctype,text)","(datistemplate,boolean)","(datallowconn,boolean)","(datconnlimit,integer)","(datlastsysoid,oid)","(datfrozenxid,xid)","(datminmxid,xid)","(dattablespace,oid)","(datacl,aclitem[])"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_db_role_setting', 'Catalog', '{"(xmin,xid)","(setdatabase,oid)","(setrole,oid)","(setconfig,text[])"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_default_acl', 'Catalog', E'{"(xmin,xid)","(oid,oid)","(defaclrole,oid)","(defaclnamespace,oid)","(defaclobjtype,\\"\\"\\"char\\"\\"\\")","(defaclacl,aclitem[])"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_depend', 'Catalog', E'{"(xmin,xid)","(classid,oid)","(objid,oid)","(objsubid,integer)","(refclassid,oid)","(refobjid,oid)","(refobjsubid,integer)","(deptype,\\"\\"\\"char\\"\\"\\")"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_description', 'Catalog', '{"(xmin,xid)","(objoid,oid)","(classoid,oid)","(objsubid,integer)","(description,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_enum', 'Catalog', '{"(xmin,xid)","(oid,oid)","(enumtypid,oid)","(enumsortorder,real)","(enumlabel,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_event_trigger', 'Catalog', E'{"(xmin,xid)","(oid,oid)","(evtname,text)","(evtevent,text)","(evtowner,oid)","(evtfoid,oid)","(evtenabled,\\"\\"\\"char\\"\\"\\")","(evttags,text[])"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_extension', 'Catalog', '{"(xmin,xid)","(oid,oid)","(extname,text)","(extowner,oid)","(extnamespace,oid)","(extrelocatable,boolean)","(extversion,text)","(extconfig,oid[])","(extcondition,text[])"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_file_settings', 'Other Status', '{"(sourcefile,text)","(sourceline,integer)","(seqno,integer)","(name,text)","(setting,text)","(applied,boolean)","(error,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_foreign_data_wrapper', 'Catalog', '{"(xmin,xid)","(oid,oid)","(fdwname,text)","(fdwowner,oid)","(fdwhandler,oid)","(fdwvalidator,oid)","(fdwacl,aclitem[])","(fdwoptions,text[])"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_foreign_server', 'Catalog', '{"(xmin,xid)","(oid,oid)","(srvname,text)","(srvowner,oid)","(srvfdw,oid)","(srvtype,text)","(srvversion,text)","(srvacl,aclitem[])","(srvoptions,text[])"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_foreign_table', 'Catalog', '{"(xmin,xid)","(ftrelid,oid)","(ftserver,oid)","(ftoptions,text[])"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_index', 'Catalog', '{"(xmin,xid)","(indexrelid,oid)","(indrelid,oid)","(indnatts,smallint)","(indisunique,boolean)","(indisprimary,boolean)","(indisexclusion,boolean)","(indimmediate,boolean)","(indisclustered,boolean)","(indisvalid,boolean)","(indcheckxmin,boolean)","(indisready,boolean)","(indislive,boolean)","(indisreplident,boolean)","(indkey,int2vector)","(indcollation,oidvector)","(indclass,oidvector)","(indoption,int2vector)","(indexprs,pg_node_tree)","(indpred,pg_node_tree)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_inherits', 'Catalog', '{"(xmin,xid)","(inhrelid,oid)","(inhparent,oid)","(inhseqno,integer)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_init_privs', 'Catalog', E'{"(xmin,xid)","(objoid,oid)","(classoid,oid)","(objsubid,integer)","(privtype,\\"\\"\\"char\\"\\"\\")","(initprivs,aclitem[])"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_language', 'Catalog', '{"(xmin,xid)","(oid,oid)","(lanname,text)","(lanowner,oid)","(lanispl,boolean)","(lanpltrusted,boolean)","(lanplcallfoid,oid)","(laninline,oid)","(lanvalidator,oid)","(lanacl,aclitem[])"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_locks', 'Other Status', '{"(locktype,text)","(database,oid)","(relation,oid)","(page,integer)","(tuple,smallint)","(virtualxid,text)","(transactionid,xid)","(classid,oid)","(objid,oid)","(objsubid,smallint)","(virtualtransaction,text)","(pid,integer)","(mode,text)","(granted,boolean)","(fastpath,boolean)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_namespace', 'Catalog', '{"(xmin,xid)","(oid,oid)","(nspname,text)","(nspowner,oid)","(nspacl,aclitem[])"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_opclass', 'Catalog', '{"(xmin,xid)","(oid,oid)","(opcmethod,oid)","(opcname,text)","(opcnamespace,oid)","(opcowner,oid)","(opcfamily,oid)","(opcintype,oid)","(opcdefault,boolean)","(opckeytype,oid)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_operator', 'Catalog', E'{"(xmin,xid)","(oid,oid)","(oprname,text)","(oprnamespace,oid)","(oprowner,oid)","(oprkind,\\"\\"\\"char\\"\\"\\")","(oprcanmerge,boolean)","(oprcanhash,boolean)","(oprleft,oid)","(oprright,oid)","(oprresult,oid)","(oprcom,oid)","(oprnegate,oid)","(oprcode,regproc)","(oprrest,regproc)","(oprjoin,regproc)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_opfamily', 'Catalog', '{"(xmin,xid)","(oid,oid)","(opfmethod,oid)","(opfname,text)","(opfnamespace,oid)","(opfowner,oid)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_pltemplate', 'Catalog', '{"(xmin,xid)","(tmplname,text)","(tmpltrusted,boolean)","(tmpldbacreate,boolean)","(tmplhandler,text)","(tmplinline,text)","(tmplvalidator,text)","(tmpllibrary,text)","(tmplacl,aclitem[])"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_policy', 'Catalog', E'{"(xmin,xid)","(oid,oid)","(polname,text)","(polrelid,oid)","(polcmd,\\"\\"\\"char\\"\\"\\")","(polroles,oid[])","(polqual,pg_node_tree)","(polwithcheck,pg_node_tree)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_prepared_statements', 'Other Status', E'{"(name,text)","(statement,text)","(prepare_time,\\"timestamp with time zone\\")","(parameter_types,regtype[])","(from_sql,boolean)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_prepared_xacts', 'Other Status', E'{"(transaction,xid)","(gid,text)","(prepared,\\"timestamp with time zone\\")","(owner,text)","(database,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_proc', 'Catalog', E'{"(xmin,xid)","(oid,oid)","(proname,text)","(pronamespace,oid)","(proowner,oid)","(prolang,oid)","(procost,real)","(prorows,real)","(provariadic,oid)","(protransform,regproc)","(proisagg,boolean)","(proiswindow,boolean)","(prosecdef,boolean)","(proleakproof,boolean)","(proisstrict,boolean)","(proretset,boolean)","(provolatile,\\"\\"\\"char\\"\\"\\")","(proparallel,\\"\\"\\"char\\"\\"\\")","(pronargs,smallint)","(pronargdefaults,smallint)","(prorettype,oid)","(proargtypes,oidvector)","(proallargtypes,oid[])","(proargmodes,\\"\\"\\"char\\"\\"[]\\")","(proargnames,text[])","(proargdefaults,pg_node_tree)","(protrftypes,oid[])","(prosrc,text)","(probin,text)","(proconfig,text[])","(proacl,aclitem[])"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_range', 'Catalog', '{"(xmin,xid)","(rngtypid,oid)","(rngsubtype,oid)","(rngcollation,oid)","(rngsubopc,oid)","(rngcanonical,regproc)","(rngsubdiff,regproc)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_replication_origin', 'Catalog', '{"(xmin,xid)","(roident,oid)","(roname,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_replication_origin_status', 'Other Status', '{"(local_id,oid)","(external_id,text)","(remote_lsn,pg_lsn)","(local_lsn,pg_lsn)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_replication_slots', 'Stats File', '{"(slot_name,text)","(plugin,text)","(slot_type,text)","(datoid,oid)","(database,text)","(active,boolean)","(active_pid,integer)","(xmin,xid)","(catalog_xmin,xid)","(restart_lsn,pg_lsn)","(confirmed_flush_lsn,pg_lsn)"}', NULL, '{datoid}', '{}', '{}' );
 INSERT INTO entity VALUES( 'pg_rewrite', 'Catalog', E'{"(xmin,xid)","(oid,oid)","(rulename,text)","(ev_class,oid)","(ev_type,\\"\\"\\"char\\"\\"\\")","(ev_enabled,\\"\\"\\"char\\"\\"\\")","(is_instead,boolean)","(ev_qual,pg_node_tree)","(ev_action,pg_node_tree)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_roles', 'Stats File', E'{"(rolname,text)","(rolsuper,boolean)","(rolinherit,boolean)","(rolcreaterole,boolean)","(rolcreatedb,boolean)","(rolcanlogin,boolean)","(rolreplication,boolean)","(rolconnlimit,integer)","(rolpassword,text)","(rolvaliduntil,\\"timestamp with time zone\\")","(rolbypassrls,boolean)","(rolconfig,text[])","(oid,oid)"}', NULL, '{oid}', '{}', '{}' );
 INSERT INTO entity VALUES( 'pg_rules', 'Stats File', '{"(schemaname,text)","(tablename,text)","(rulename,text)","(definition,text)"}', NULL, '{}', '{}', '{}' );
 INSERT INTO entity VALUES( 'pg_seclabel', 'Catalog', '{"(xmin,xid)","(objoid,oid)","(classoid,oid)","(objsubid,integer)","(provider,text)","(label,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_seclabels', 'Other Status', '{"(objoid,oid)","(classoid,oid)","(objsubid,integer)","(objtype,text)","(objnamespace,oid)","(objname,text)","(provider,text)","(label,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_settings', 'Other Status', '{"(name,text)","(setting,text)","(unit,text)","(category,text)","(short_desc,text)","(extra_desc,text)","(context,text)","(vartype,text)","(source,text)","(min_val,text)","(max_val,text)","(enumvals,text[])","(boot_val,text)","(reset_val,text)","(sourcefile,text)","(sourceline,integer)","(pending_restart,boolean)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_shdepend', 'Catalog', E'{"(xmin,xid)","(dbid,oid)","(classid,oid)","(objid,oid)","(objsubid,integer)","(refclassid,oid)","(refobjid,oid)","(deptype,\\"\\"\\"char\\"\\"\\")"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_shdescription', 'Catalog', '{"(xmin,xid)","(objoid,oid)","(classoid,oid)","(description,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_shseclabel', 'Catalog', '{"(xmin,xid)","(objoid,oid)","(classoid,oid)","(provider,text)","(label,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_stat_activity', 'Other Status', E'{"(datid,oid)","(datname,text)","(pid,integer)","(usesysid,oid)","(usename,text)","(application_name,text)","(client_addr,inet)","(client_hostname,text)","(client_port,integer)","(backend_start,\\"timestamp with time zone\\")","(xact_start,\\"timestamp with time zone\\")","(query_start,\\"timestamp with time zone\\")","(state_change,\\"timestamp with time zone\\")","(wait_event_type,text)","(wait_event,text)","(state,text)","(backend_xid,xid)","(backend_xmin,xid)","(query,text)"}', '{"(waiting,boolean)"}', NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_stat_all_indexes', 'Stats File', '{"(relid,oid)","(indexrelid,oid)","(schemaname,text)","(relname,text)","(indexrelname,text)","(idx_scan,bigint)","(idx_tup_read,bigint)","(idx_tup_fetch,bigint)"}', NULL, '{relid,indexrelid}', '{idx_scan,idx_tup_read,idx_tup_fetch}', '{}' );
 INSERT INTO entity VALUES( 'pg_stat_all_tables', 'Stats File', E'{"(relid,oid)","(schemaname,text)","(relname,text)","(seq_scan,bigint)","(seq_tup_read,bigint)","(idx_scan,bigint)","(idx_tup_fetch,bigint)","(n_tup_ins,bigint)","(n_tup_upd,bigint)","(n_tup_del,bigint)","(n_tup_hot_upd,bigint)","(n_live_tup,bigint)","(n_dead_tup,bigint)","(n_mod_since_analyze,bigint)","(last_vacuum,\\"timestamp with time zone\\")","(last_autovacuum,\\"timestamp with time zone\\")","(last_analyze,\\"timestamp with time zone\\")","(last_autoanalyze,\\"timestamp with time zone\\")","(vacuum_count,bigint)","(autovacuum_count,bigint)","(analyze_count,bigint)","(autoanalyze_count,bigint)"}', NULL, '{relid}', '{seq_scan,seq_tup_read,idx_scan,idx_tup_fetch,n_tup_ins,n_tup_upd,n_tup_del,n_tup_hot_upd,n_live_tup,n_dead_tup,n_mod_since_analyze,vacuum_count,autovacuum_count,analyze_count,autoanalyze_count}', '{}' );
 INSERT INTO entity VALUES( 'pg_stat_archiver', 'Stats File', E'{"(archived_count,bigint)","(last_archived_wal,text)","(last_archived_time,\\"timestamp with time zone\\")","(failed_count,bigint)","(last_failed_wal,text)","(last_failed_time,\\"timestamp with time zone\\")","(stats_reset,\\"timestamp with time zone\\")"}', NULL, '{}', '{archived_count,failed_count}', '{}' );
 INSERT INTO entity VALUES( 'pg_stat_bgwriter', 'Stats File', E'{"(checkpoints_timed,bigint)","(checkpoints_req,bigint)","(checkpoint_write_time,\\"double precision\\")","(checkpoint_sync_time,\\"double precision\\")","(buffers_checkpoint,bigint)","(buffers_clean,bigint)","(maxwritten_clean,bigint)","(buffers_backend,bigint)","(buffers_backend_fsync,bigint)","(buffers_alloc,bigint)","(stats_reset,\\"timestamp with time zone\\")"}', NULL, '{}', '{checkpoints_timed,checkpoints_req,checkpoint_write_time,checkpoint_sync_time,buffers_checkpoint,buffers_clean,maxwritten_clean,buffers_backend,buffers_backend_fsync,buffers_alloc}', '{}' );
 INSERT INTO entity VALUES( 'pg_stat_database', 'Stats File', E'{"(datid,oid)","(datname,text)","(numbackends,integer)","(xact_commit,bigint)","(xact_rollback,bigint)","(blks_read,bigint)","(blks_hit,bigint)","(tup_returned,bigint)","(tup_fetched,bigint)","(tup_inserted,bigint)","(tup_updated,bigint)","(tup_deleted,bigint)","(conflicts,bigint)","(temp_files,bigint)","(temp_bytes,bigint)","(deadlocks,bigint)","(blk_read_time,\\"double precision\\")","(blk_write_time,\\"double precision\\")","(stats_reset,\\"timestamp with time zone\\")"}', NULL, '{datid}', '{xact_commit,xact_rollback,blks_read,blks_hit,tup_returned,tup_fetched,tup_inserted,tup_updated,tup_deleted,conflicts,temp_files,temp_bytes,deadlocks,blk_read_time,blk_write_time}', '{}' );
 INSERT INTO entity VALUES( 'pg_stat_database_conflicts', 'Stats File', '{"(datid,oid)","(datname,text)","(confl_tablespace,bigint)","(confl_lock,bigint)","(confl_snapshot,bigint)","(confl_bufferpin,bigint)","(confl_deadlock,bigint)"}', NULL, '{datid}', '{confl_tablespace,confl_lock,confl_snapshot,confl_bufferpin,confl_deadlock}', '{}' );
 INSERT INTO entity VALUES( 'pg_stat_progress_vacuum', 'Other Status', '{"(pid,integer)","(datid,oid)","(datname,text)","(relid,oid)","(phase,text)","(heap_blks_total,bigint)","(heap_blks_scanned,bigint)","(heap_blks_vacuumed,bigint)","(index_vacuum_count,bigint)","(max_dead_tuples,bigint)","(num_dead_tuples,bigint)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_stat_replication', 'Other Status', E'{"(pid,integer)","(usesysid,oid)","(usename,text)","(application_name,text)","(client_addr,inet)","(client_hostname,text)","(client_port,integer)","(backend_start,\\"timestamp with time zone\\")","(backend_xmin,xid)","(state,text)","(sent_location,pg_lsn)","(write_location,pg_lsn)","(flush_location,pg_lsn)","(replay_location,pg_lsn)","(sync_priority,integer)","(sync_state,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_stat_ssl', 'Other Status', '{"(pid,integer)","(ssl,boolean)","(version,text)","(cipher,text)","(bits,integer)","(compression,boolean)","(clientdn,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_stat_user_functions', 'Stats File', E'{"(funcid,oid)","(schemaname,text)","(funcname,text)","(calls,bigint)","(total_time,\\"double precision\\")","(self_time,\\"double precision\\")"}', NULL, '{funcid}', '{calls,total_time,self_time}', '{}' );
 INSERT INTO entity VALUES( 'pg_stat_wal_receiver', 'Other Status', E'{"(pid,integer)","(status,text)","(receive_start_lsn,pg_lsn)","(receive_start_tli,integer)","(received_lsn,pg_lsn)","(received_tli,integer)","(last_msg_send_time,\\"timestamp with time zone\\")","(last_msg_receipt_time,\\"timestamp with time zone\\")","(latest_end_lsn,pg_lsn)","(latest_end_time,\\"timestamp with time zone\\")","(slot_name,text)","(conninfo,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_statio_all_indexes', 'Stats File', '{"(relid,oid)","(indexrelid,oid)","(schemaname,text)","(relname,text)","(indexrelname,text)","(idx_blks_read,bigint)","(idx_blks_hit,bigint)"}', NULL, '{relid,indexrelid}', '{idx_blks_read,idx_blks_hit}', '{}' );
 INSERT INTO entity VALUES( 'pg_statio_all_sequences', 'Stats File', '{"(relid,oid)","(schemaname,text)","(relname,text)","(blks_read,bigint)","(blks_hit,bigint)"}', NULL, '{relid}', '{blks_read,blks_hit}', '{}' );
 INSERT INTO entity VALUES( 'pg_statio_all_tables', 'Stats File', '{"(relid,oid)","(schemaname,text)","(relname,text)","(heap_blks_read,bigint)","(heap_blks_hit,bigint)","(idx_blks_read,bigint)","(idx_blks_hit,bigint)","(toast_blks_read,bigint)","(toast_blks_hit,bigint)","(tidx_blks_read,bigint)","(tidx_blks_hit,bigint)"}', NULL, '{relid}', '{heap_blks_read,heap_blks_hit,idx_blks_read,idx_blks_hit,toast_blks_read,toast_blks_hit,tidx_blks_read,tidx_blks_hit}', '{}' );
 INSERT INTO entity VALUES( 'pg_tablespace', 'Catalog', '{"(xmin,xid)","(oid,oid)","(spcname,text)","(spcowner,oid)","(spcacl,aclitem[])","(spcoptions,text[])"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_timezone_abbrevs', 'Other Status', '{"(abbrev,text)","(utc_offset,interval)","(is_dst,boolean)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_timezone_names', 'Other Status', '{"(name,text)","(abbrev,text)","(utc_offset,interval)","(is_dst,boolean)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_transform', 'Catalog', '{"(xmin,xid)","(oid,oid)","(trftype,oid)","(trflang,oid)","(trffromsql,regproc)","(trftosql,regproc)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_trigger', 'Catalog', E'{"(xmin,xid)","(oid,oid)","(tgrelid,oid)","(tgname,text)","(tgfoid,oid)","(tgtype,smallint)","(tgenabled,\\"\\"\\"char\\"\\"\\")","(tgisinternal,boolean)","(tgconstrrelid,oid)","(tgconstrindid,oid)","(tgconstraint,oid)","(tgdeferrable,boolean)","(tginitdeferred,boolean)","(tgnargs,smallint)","(tgattr,int2vector)","(tgargs,bytea)","(tgqual,pg_node_tree)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_ts_config', 'Catalog', '{"(xmin,xid)","(oid,oid)","(cfgname,text)","(cfgnamespace,oid)","(cfgowner,oid)","(cfgparser,oid)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_ts_config_map', 'Catalog', '{"(xmin,xid)","(mapcfg,oid)","(maptokentype,integer)","(mapseqno,integer)","(mapdict,oid)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_ts_dict', 'Catalog', '{"(xmin,xid)","(oid,oid)","(dictname,text)","(dictnamespace,oid)","(dictowner,oid)","(dicttemplate,oid)","(dictinitoption,text)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_ts_parser', 'Catalog', '{"(xmin,xid)","(oid,oid)","(prsname,text)","(prsnamespace,oid)","(prsstart,regproc)","(prstoken,regproc)","(prsend,regproc)","(prsheadline,regproc)","(prslextype,regproc)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_ts_template', 'Catalog', '{"(xmin,xid)","(oid,oid)","(tmplname,text)","(tmplnamespace,oid)","(tmplinit,regproc)","(tmpllexize,regproc)"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_type', 'Catalog', E'{"(xmin,xid)","(oid,oid)","(typname,text)","(typnamespace,oid)","(typowner,oid)","(typlen,smallint)","(typbyval,boolean)","(typtype,\\"\\"\\"char\\"\\"\\")","(typcategory,\\"\\"\\"char\\"\\"\\")","(typispreferred,boolean)","(typisdefined,boolean)","(typdelim,\\"\\"\\"char\\"\\"\\")","(typrelid,oid)","(typelem,oid)","(typarray,oid)","(typinput,regproc)","(typoutput,regproc)","(typreceive,regproc)","(typsend,regproc)","(typmodin,regproc)","(typmodout,regproc)","(typanalyze,regproc)","(typalign,\\"\\"\\"char\\"\\"\\")","(typstorage,\\"\\"\\"char\\"\\"\\")","(typnotnull,boolean)","(typbasetype,oid)","(typtypmod,integer)","(typndims,integer)","(typcollation,oid)","(typdefaultbin,pg_node_tree)","(typdefault,text)","(typacl,aclitem[])"}', NULL, NULL, NULL, NULL );
 INSERT INTO entity VALUES( 'pg_user_mapping', 'Catalog', '{"(xmin,xid)","(oid,oid)","(umuser,oid)","(umserver,oid)","(umoptions,text[])"}', NULL, NULL, NULL, NULL );

UPDATE entity SET delta_keys = delta_keys || array['queryid'] WHERE entity = 'pg_stat_statements' AND NOT delta_keys @> array['queryid'];

CREATE VIEW entity_type_mapping_v AS
	SELECT * FROM (
		VALUES
			/*
			 * Unfortunately there's some odd behavior with FQNs for some types
			 * (like smallint), so don't use pg_catalog here. :(
			 */
			('regproc'::text, 'regprocedure'::text)
			, ('pg_node_tree', '_cat_snap.pg_node_tree__text')
	) a(base_type, corrected_type)
		
;

CREATE VIEW entity_v AS
    SELECT *
        , array(
            SELECT attribute_name || ' ' || attribute_type
                FROM unnest(e.attributes || e.extra_attributes) a
            ) AS base
		, array(
			SELECT a.attribute_name || ' ' || coalesce(m.corrected_type, a.attribute_type)
                FROM unnest(e.attributes || e.extra_attributes) a
				LEFT JOIN entity_type_mapping_v m ON a.attribute_type = m.base_type
			) AS corrected
        , array(
            SELECT attribute_name
                    || CASE WHEN array[attribute_name] <@ (e.delta_counters || e.delta_fields) THEN '_d' ELSE '' END
                    || ' '
                    || attribute_type
                FROM unnest(e.attributes || e.extra_attributes) a
            ) AS delta
        , array(
            SELECT attribute_name || '_d interval'
                FROM unnest(e.attributes || e.extra_attributes) a
                WHERE attribute_type::text ~ '^timestamp with'
            ) AS intervals
    FROM entity e
    ORDER BY entity
;
